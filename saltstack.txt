SaltStack是一个服务器基础架构集中化管理平台，具备配置管理、远程执行、监控等功能，一般可以理解为简化版的puppet和加强版的func
SaltStack基于Python语言实现，结合轻量级消息队列（ZeroMQ）与Python第三方模块（Pyzmq、PyCrypto、Pyjinjia2、python-msgpack和PyYAML等）构建。
        
通过部署SaltStack环境，我们可以在成千上万台服务器上做到批量执行命令，根据不同业务特性进行配置集中化管理、分发文件、采集服务器数据、操作系统基础及软件包管理等，SaltStack是运维人员提高工作效率、规范业务配置与操作的利器。


            特性

                1) 部署简单、方便；
                2) 支持大部分UNIX/Linux及Windows环境；
                3) 主从集中化管理；
                4) 配置简单、功能强大、扩展性强；
                5) 主控端（master）和被控端（minion）基于证书认证，安全可靠；
                6) 支持API及自定义模块，可通过Python轻松扩展。  
                                        

   Master与Minion认证

  1) minion在第一次启动时，会在/etc/salt/pki/minion/(该路径在/etc/salt/minion里面设置)下自动生成minion.pem(private key)和 minion.pub(public key)，然后将 minion.pub发送给master。
                                                
  2) master在接收到minion的public key后，通过salt-key命令accept minion public key，这样在master的/etc/salt/pki/master/minions下的将会存放以minion id命名的 public key，然后master就能对minion发送指令了。    
                                                        
                                                            
salt-master的端口：
               4505：为salt的消息发布专用端口
               4506：为客户端与服务端通信的端口




saltstack的安装以及启动
准备工作：
1.首先准备好三台虚拟机，一个作为master端 两台作为minion端
2.必须更改主机名
#hostnamectl set-hostname 加上改的主机名


在salt master端安装：
1.yum install -y master
在salt minion端安装：
1.yum install -y minion


安装完成后需要修改minion端的配置文件：
#vim /etc/salt/minion
1.master：10.10.10.10（master端的IP号或者主机名）
2.id:10.10.10.4(当前minion端的IP号或者主机名)

启动master端和minion端的saltstack服务（开机自启动）

在master端可以查看minion的证书申请，并同意
#salt-key-L
#salt-key -A -y


#salt '*' test.ping 值为True
安装完毕!





















